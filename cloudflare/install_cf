#!/bin/bash

DEFAULT_HOST_KEY="DEFAULT_KEY_REPLACE_ME"
DEFAULT_HOST_FORMAL_NAME="DEFAULT_HOST_FORMAL_NAME"
host_key=$1
mod_cf=$2
formal_name=$3
install_mode=$4
if [ "$host_key" == "" ]; then
    echo "Usage: ./install_cf HOST_KEY [mod_cf] [formal name] [install_mode]."
    echo ""
    echo "If you do not have a HOST_KEY, contact CloudFlare for one before proceeding."
    echo "mod_cf is optional. If set, the installer will try to also install mod_cloudflare."
    echo "install_mode is optional. Set to 'simple' to have only 1 CloudFlare icon on the main cPanel dashboard."
    exit 0
fi

## Make sure we're in the right directory.
if [ ! -f "etc/cloudflare.json.back" ]
then
    echo "Error -- must run this script from the same directory as the script."
    exit 0
fi

## And that we are root.
id=`id -u`
if [ "$id" != 0 ]
then
    echo "Error -- must run this script as root."
    exit 0
fi

## And that the host key is correct
error=`curl -s -k https://api.cloudflare.com/host-gw.html -d act=cpanel_info -d host_key=$host_key | grep "No or invalid host_key"`

if [ "$error" != "" ]; then
    echo "Your HOST_KEY ($host_key) is invalid."
    echo ""
    echo "Usage: ./install_cf HOST_KEY [mod_cf] [formal name] [install_mode]."
    echo ""
    echo "If you do not have a HOST_KEY, contact CloudFlare for one before proceeding."
    echo "mod_cf is optional. If set, the installer will try to also install mod_cloudflare."
    echo "install_mode is optional. Set to 'simple' to have only 1 CloudFlare icon on the main cPanel dashboard."
    exit 0
fi

## Only two options for install_mode, so force it to be one or the other
if [ "$install_mode" != "simple" ]
then
    install_mode="extended"
fi

## First install the CF files
cp Cpanel/CloudFlare.pm /usr/local/cpanel/Cpanel

## Clean up current instances of the updated version
if [[ -d /usr/local/cloudflare_cpanel ]]; then
    rm -rf /usr/local/cloudflare_cpanel
fi

## -- START CLEANUP -- clean up old instances of the plugin (or old symlinks if they exist)
if [[ !(-L /usr/local/cpanel/base/frontend/x3/cloudflare/) && -d /usr/local/cpanel/base/frontend/x3/cloudflare/ ]]; then
    rm -rf /usr/local/cpanel/base/frontend/x3/cloudflare/
fi

    ## Remove old asset folders
    if [[ -d /usr/local/cpanel/base/frontend/x3/css2/cloudflare/ ]]; then
        rm -rf /usr/local/cpanel/base/frontend/x3/css2/cloudflare/
    fi
    if [[ -d /usr/local/cpanel/base/frontend/x3/js2/cloudflare/ ]]; then
        rm -rf /usr/local/cpanel/base/frontend/x3/js2/cloudflare/
    fi
    if [[ -d /usr/local/cpanel/base/frontend/x3/js2-min/cloudflare/ ]]; then
        rm -rf /usr/local/cpanel/base/frontend/x3/js2-min/cloudflare/
    fi
    if [[ -d /usr/local/cpanel/base/frontend/x3/images/cloudflare/ ]]; then
        rm -rf /usr/local/cpanel/base/frontend/x3/images/cloudflare/
    fi

if [[ !(-L /usr/local/cpanel/base/frontend/paper_lantern/cloudflare/) && -d /usr/local/cpanel/base/frontend/paper_lantern/cloudflare/ ]]; then
    rm -rf /usr/local/cpanel/base/frontend/paper_lantern/cloudflare/
fi
    
    ## Remove old asset folders
    if [[ -d /usr/local/cpanel/base/frontend/paper_lantern/css2/cloudflare/ ]]; then
        rm -rf /usr/local/cpanel/base/frontend/paper_lantern/css2/cloudflare/
    fi
    if [[ -d /usr/local/cpanel/base/frontend/paper_lantern/js2/cloudflare/ ]]; then
        rm -rf /usr/local/cpanel/base/frontend/paper_lantern/js2/cloudflare/
    fi
    if [[ -d /usr/local/cpanel/base/frontend/paper_lantern/js2-min/cloudflare/ ]]; then
        rm -rf /usr/local/cpanel/base/frontend/paper_lantern/js2-min/cloudflare/
    fi
    if [[ -d /usr/local/cpanel/base/frontend/paper_lantern/images/cloudflare/ ]]; then
        rm -rf /usr/local/cpanel/base/frontend/paper_lantern/images/cloudflare/
    fi

## -- END CLEANUP -- ##

## Shift all our base files into our location
if [[ !(-d /usr/local/cloudflare_cpanel) ]]; then
    mkdir /usr/local/cloudflare_cpanel
fi
if [[ !(-d /usr/local/cloudflare_cpanel/cf_base) ]]; then
    mkdir /usr/local/cloudflare_cpanel/cf_base
fi
if [[ !(-d /usr/local/cloudflare_cpanel/x3) ]]; then
    mkdir /usr/local/cloudflare_cpanel/x3
fi
if [[ !(-d /usr/local/cloudflare_cpanel/paper_lantern) ]]; then
    mkdir /usr/local/cloudflare_cpanel/paper_lantern
fi

cp -r base/frontend/cf_base/cloudflare /usr/local/cloudflare_cpanel/cf_base/
cp -r base/frontend/x3/cloudflare /usr/local/cloudflare_cpanel/x3/
cp -r base/frontend/paper_lantern/cloudflare /usr/local/cloudflare_cpanel/paper_lantern/

## Create symlinks for each template base back to cf_base
for f in /usr/local/cloudflare_cpanel/cf_base/cloudflare/*
do
  # take action on each file. $f store current file name
  if [[ -d "$f" || -f "$f" ]]; then
    ln -sf "$f" "/usr/local/cloudflare_cpanel/x3/cloudflare/"
    ln -sf "$f" "/usr/local/cloudflare_cpanel/paper_lantern/cloudflare/"
  fi
done

## Create symlinks in the themes, linking back to the base files
if [[ -d /usr/local/cpanel/base/frontend/x3/ ]]
then
    ln -sf "/usr/local/cloudflare_cpanel/x3/cloudflare" "/usr/local/cpanel/base/frontend/x3/cloudflare"
fi

if [[ -d /usr/local/cpanel/base/frontend/paper_lantern/ ]]
then
    ln -sf "/usr/local/cloudflare_cpanel/paper_lantern/cloudflare" "/usr/local/cpanel/base/frontend/paper_lantern/cloudflare"
fi

## For cPanel versions > 11.44, we no longer need a index.html file in Paper Lantern and instead can use the new index.html.tt file.
## START Hack to clean up index.html file from paper lantern
cpversion=`/usr/local/cpanel/cpanel -V`
cpversion=${cpversion:0:5} #should return something like '11.44'
if [[ !( ("$cpversion" == "11.42") || ("$cpversion" == "11.44") ) ]]
then
    echo "Removing old index.html file"
    rm -f /usr/local/cloudflare_cpanel/paper_lantern/cloudflare/*.html
fi
## End Hack for paper lantern

## Update Net/SSLeay.pm so that cpanel will work.
line62=`sed 62q /usr/local/cpanel/perl/Net/SSLeay.pm | tail -1`

if [[ "$line62" =~ 'use 5.' ]]; then
    cp /usr/local/cpanel/perl/Net/SSLeay.pm /usr/local/cpanel/perl/Net/SSLeay.pm.backup
    sed -i -e '62,1d' /usr/local/cpanel/perl/Net/SSLeay.pm
fi

## cleanup old dynamicui files if they exist, they will be recreated as needed
rm -f /usr/local/cpanel/base/frontend/x3/dynamicui/dynamicui_cloudflare*.conf
rm -f /usr/local/cpanel/base/frontend/paper_lantern/dynamicui/dynamicui_cloudflare*.conf
rm -f /usr/local/cpanel/base/frontend/FlatPanel/dynamicui/dynamicui_cloudflare*.conf
## including this old version of the paper lantern file
rm -f /usr/local/cpanel/base/frontend/paper_lantern/dynamicui/dynamicui_CloudFlare*.conf

## Lastly register the plugin buttons with Cpanel
if [[ -f /usr/local/cpanel/scripts/install_plugin ]]
then
    ## there is a separate install folder for x3 to use the older icon style
    if [[ "$install_mode" == "simple" ]]
    then
        /usr/local/cpanel/scripts/install_plugin installers/cloudflare_simple.tar.bz2
        /usr/local/cpanel/scripts/install_plugin installers/cloudflare_simple.x3.tar.bz2 --theme x3
    else
        /usr/local/cpanel/scripts/install_plugin installers/cloudflare.tar.bz2
        /usr/local/cpanel/scripts/install_plugin installers/cloudflare.x3.tar.bz2 --theme x3
    fi
else
    ## fall back to older installer for those before 11.44
    if [[ "$install_mode" == "simple" ]]
    then
        /usr/local/cpanel/bin/register_cpanelplugin installers/cloudflare_simple.cpanelplugin
    else
        ## only installs in X3, since Paper lantern won't exist
        cp base/frontend/x3/dynamicui_cloudflare_base.conf /usr/local/cpanel/base/frontend/x3/dynamicui/dynamicui_cloudflare_base.conf
            ## the group requires mutliple icon images, so duplicate our current icon for all locations
            cp base/frontend/x3/branding/cloudflare_support.png /usr/local/cpanel/base/frontend/x3/branding/cloudflare_support.png
            cp base/frontend/x3/branding/cloudflare_status.png /usr/local/cpanel/base/frontend/x3/branding/cloudflare_status.png
            cp base/frontend/x3/branding/cloudflare_security.png /usr/local/cpanel/base/frontend/x3/branding/cloudflare_security.png
            cp base/frontend/x3/branding/cloudflare_performance.png /usr/local/cpanel/base/frontend/x3/branding/cloudflare_performance.png
            cp base/frontend/x3/branding/cloudflare_analytics.png /usr/local/cpanel/base/frontend/x3/branding/cloudflare_analytics.png

        /usr/local/cpanel/bin/register_cpanelplugin installers/cloudflare.cpanelplugin
    fi
fi

## grab current ordering value if it exists
ordering=`cat /usr/local/cpanel/etc/cloudflare.json | grep ordering | cut -d "\"" -f 4`
if [ "$ordering" == "" ]; then
    ordering=1
fi

## Populate config file.
cp etc/cloudflare.json.back etc/cloudflare.json

if [ "$formal_name" == "" ]; then
    formal_name="your web hosting provider"
fi

sed -i -e "s/$DEFAULT_HOST_FORMAL_NAME/$formal_name/" etc/cloudflare.json 

## make sure that install mode is set in the json file
if [[ "$install_mode" == "simple" ]]
then
    sed -i -e "s/\"install_mode\":\"extended\"/\"install_mode\":\"simple\"/" etc/cloudflare.json
fi

## set the ordering value in the json again
sed -i -e "s/\"ordering\":\"1\"/\"ordering\":\"${ordering}\"/" etc/cloudflare.json

## update dynamicui_cloudflare_base.conf files to use the ordering set
if [ "$ordering" != 1 ]; then
    for f in /usr/local/cpanel/base/frontend/*/dynamicui/dynamicui_cloudflare_base.conf
    do
        sed -i -e "s/grouporder=>1/grouporder=>${ordering}/" "$f"
    done
fi

## Delete the keywrap, it doesn't need to be there anymore

if [ -e /usr/local/cpanel/bin/apikeywrap ];
then
    rm -f /usr/local/cpanel/bin/apikeywrap
fi

## And write the config file
cp etc/cloudflare.json /usr/local/cpanel/etc/

## Api key file
echo $host_key > /root/.cpanel/datastore/cf_api
chmod 600 /root/.cpanel/datastore/cf_api

## Generate the include file
touch /usr/local/cpanel/etc/cloudflare_local.tmpl

## Also data file -- world readible, for the web server.
## @TODO -- figure out what user this users.
touch /usr/local/cpanel/etc/cloudflare_data.yaml
chmod 644 /usr/local/cpanel/etc/cloudflare_data.yaml

## Start the updator going, also copies the AdminBin stuff
cp -f bin/* /usr/local/cpanel/bin/
iscf=`crontab -l | grep cloudflare`
if [ "$iscf" == "" ]; then
    crontab -l > c.cur
    echo "12 2 * * 0 /usr/local/cpanel/bin/cloudflare_update.sh >/dev/null 2>&1" >> c.cur
    crontab c.cur
fi

## Change cfadmin script to root only.
chmod 700 /usr/local/cpanel/bin/cfadmin

## Pluggable cpwrap config file for 11.38
chmod 700 /usr/local/cpanel/bin/cfadmin.conf

# Wrapper is not needed on 11.38
if [ -e "/usr/local/cpanel/bin/admin" ]; then
  rm -fv /usr/local/cpanel/bin/cfwrap
else
  cd src
  make
  make install
  make clean
  cd ..
fi

## Add a post update script for cPanel in general to reinstall Cloudflare extension, since we do a version check on install
if [[ ! -f /scripts/postupcp ]]
then
    echo "#!/bin/bash" >> /scripts/postupcp
    chmod +x /scripts/postupcp
fi

cfonupgrade=`grep -F "cloudflare_update" /scripts/postupcp`
if [ "$cfonupgrade" == "" ]; then
    echo "sh /usr/local/cpanel/bin/cloudflare_update.sh force" >> /scripts/postupcp
fi

## mod_cloudflare?
if [ "$mod_cf" == "mod_cf" ]; then
    rm -f mod_cloudflare*
    echo "

==> mod_cloudflare: `bash <(curl -s https://raw.githubusercontent.com/cloudflare/mod_cloudflare/master/EasyApache/installer.sh)`
==> You may need to customize your EasyApache profile to include Mod CloudFlare
"

fi


if [[ -f /usr/local/cpanel/bin/sprite_generator ]]
then
    /usr/local/cpanel/bin/sprite_generator --all
fi

echo "

CloudFlare module installed successfully.
"
